package libcore.net.http;

import java.io.InputStream;
import libcore.io.IoUtils;
import libcore.util.Objects;

public class HttpWorker extends Thread {
	
	private HttpEngine engine;
	private RawHeaders header;
	private HttpHelper helper;
	private String type;
	int marker;
	int chunkSize;

	public HttpWorker(HttpHelper hp, HttpEngine e, RawHeaders h, String t) {
		helper = hp;
		engine = e;
		header = h;
		type = t;
		start();
	}

	public void run() {
		chunkSize = helper.getChunkSize();
		int flag = 0;
		while(true) {
		if(flag == 1)
			break;
		/*
		synchronized(ConnectionStatus.lock) {
		if(type.equals("wifi")) {
			if(!ConnectionStatus.WIFI)
				ConnectionStatus.WIFI.wait();
		}
		else {
			if(!ConnectionStatus.MOBILE)
				ConnectionStatus.MOBILE.wait();
		}
		}
		*/
		synchronized(helper.lock) {
			marker = helper.getMarker();
			int newMarker = marker + chunkSize;
			helper.setMarker(newMarker);
		}
		
		int start = marker;
		int end = start + chunkSize - 1;
		try{
			RawHeaders tmpHeader = new RawHeaders(header);
			tmpHeader.set("Range", "bytes=" + start + "-" + end);
			engine.updateHeader(tmpHeader);
			System.out.println("622 - Worker: <" + type + ">...sending" + " bytes=" + start + " - " + end);
			
			synchronized(helper.lock) {
				if(type.equals("wifi"))
					HttpHelper.INSTANCE.connectionFor("wifi");
				else
					HttpHelper.INSTANCE.connectionFor("mobile");
				engine.sendRequest();
			}
			if(type.equals("wifi"))
				helper.wifiEngine = engine;
			else
				helper.mobileEngine = engine;
			
			engine.readResponse();
			if (engine.getResponseCode() >= 400/*HTTP_BAD_REQUEST*/) {
				flag = 1;
				System.out.println("622 - BAD Request for Worker: <" + type + ">...sending" + " bytes=" + start + " - " + end);
			}
			InputStream result = engine.getResponseBody();
			if(result != null) {
				synchronized(helper.lock) {
					helper.insertResultToMap(start, result); 
				}
			}
			else
			{
				System.out.println("622 - Null InputStream returned for Worker: <" + type + ">... sending" + " bytes=" + start + " - " + end);
				flag = 1;
			}
		} catch(Exception e) {
			System.out.println("622 - EXCEPTION Worker: <" + type + ">...sending" + " bytes=" + start + " - " + end);
			e.printStackTrace();
			flag = 1;
		}

		}

		System.out.println("622 - Http Worker: <" + type + "> ... exiting");
	}

}
